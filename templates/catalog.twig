{% extends "_layout" %}

{% block content %}
    <section class="catalog-banner-section">
      <div class="title-container">
        <h1 class="title">Catalog.</h1>
      </div>

      <div class="popular-card">
        {% set catalogCard = craft.entries().section('catalog').one() %}

        <h3 class="title">{{catalogCard.title}}</h3>
        <p class="price">{{catalogCard.price|money}}</p>
        <a href="{{siteUrl}}catalog" class="small-btn">Go to catalog</a>
        <img src="{{catalogCard.productImage.one().url('')}}" alt="Shoe" />
      </div>
    </section>

    <div class="overlay-background" data-visible="false"></div>

    <div class="catalog-section-container">
      <aside class="filter-container" data-visible="false">
        <div class="title-container">
          <h2 class="title">Filter.</h2>
          <img src="{{ url('icons/Icon_ChevronRight.svg') }}" alt="close" />
        </div>

        <div class="wrapper gender-filter-container filter-category-container" data-category="demographics">
          <form action="#" method="post" class="gender-filter-form">
            {% set entries = craft.entries().section('demographicFilters').all() %}
            
            {% for entry in entries %}
              <label for="{{ entry.slug }}" class="input-container">
                {{entry.title}}
                <input type="checkbox" name="{{ entry.slug }}" id="{{ entry.slug }}" />
                <span class="checkmark">
                  <img src="{{ url('icons/Icon_Checkmark.svg') }}" alt="Checkmark" />
                </span>
              </label>
            {% endfor %}
          </form>
        </div>

        <hr />

        <div class="wrapper type-filter-container filter-category-container" data-category="types">
          <form action="#" method="post" class="type-filter-form">
            {% set entries = craft.entries().section('typeFilters').all() %}
            
            {% for entry in entries %}
              <label for="{{ entry.slug }}" class="input-container">
                {{entry.title}}
                <input type="checkbox" name="{{ entry.slug }}" id="{{ entry.slug }}" />
                <span class="checkmark">
                  <img src="{{ url('icons/Icon_Checkmark.svg') }}" alt="Checkmark" />
                </span>
              </label>
            {% endfor %}
          </form>
        </div>

        <div class="price-filter-container">
          <div class="filter-title-container">
            <p class="filter-title">Pricing</p>
          </div>

          <form action="#" method="post" class="price-filter-form">
            <input type="text" name="min-price" id="min-price" value="€ 0" />
            <input
              type="text"
              name="max-price"
              id="max-price"
              value="€ 100.00"
            />
          </form>
        </div>

        <div class="wrapper color-filter-container filter-category-container" data-category="colors">
          <div class="filter-title-container">
            <p class="filter-title">Colors</p>
          </div>
          <div class="color-boxes-container">
            {% set entries = craft.entries().section('colorFilters').all() %}
            
            {% for entry in entries %}
              <label for="{{ entry.slug }}" class="input-container">
                <input type="checkbox" name="{{ entry.slug }}" id="{{ entry.slug }}" />
                <span class="checkmark" style="background-color: {{entry.colorCode}}">
                  <img src="{{ url('icons/Icon_Checkmark.svg') }}" alt="Checkmark" />
                </span>
              </label>
            {% endfor %}
          </div>
        </div> 

        <hr />

        <div class="wrapper size-filter-container filter-category-container" data-category="sizes">
          <div class="filter-title-container">
            <p class="filter-title">Size</p>
          </div>

          <div class="size-boxes-container">

            {% set entries = craft.entries().section('sizeFilters').all() %}
            
            {% for entry in entries %}
              <label for="shoe-size-{{ entry.slug }}" class="input-container">
                <input
                  type="checkbox"
                  name="shoe-size-{{ entry.slug }}"
                  id="shoe-size-{{ entry.slug }}"
                  class="shoe-size"
                />
              <span class="size-number">{{ entry.title }}</span>
            </label>
            {% endfor %}
          </div>
        </div>
      </aside>

      <section class="catalog-section">
        <div class="sort-container">
          <div class="wrapper">
            <div class="title-container">
              <h2 class="title">Filter.</h2>
              <img src="{{ url('icons/Icon_ChevronRight.svg') }}" alt="Open" />
            </div>

            <div class="sort-filter-container">
              <div class="sort-filter">
                <p>Newest</p>
                <img src="{{ url('icons/Icon_Sort.svg') }}" alt="Sorting" />
              </div>
              <div class="sort-filter">
                <p>Price</p>
                <img src="{{ url('icons/Icon_Sort.svg') }}" alt="Sorting" />
              </div>
            </div>
          </div>
        </div>

        <div class="catalog-container">
            {% set entries = craft.entries().section('catalog').all() %}

            {% for entry in entries %}
              <a href="{{entry.url}}" class="catalog-item"
                {% for demographics in entry.demographics %}
                  data-{{demographics.slug}}
                {% endfor %}
                
                {% for types in entry.types %}
                  data-{{types.slug}}
                {% endfor %}

                {% for colors in entry.colors %}
                  data-{{colors.slug}}
                {% endfor %}

                {% for sizes in entry.sizes %}
                  data-shoe-size-{{sizes.slug}}
                {% endfor %}                              
              >
                <div class="product-image-container">
                  <img src="{{entry.productImage.one().url('')}}" alt="Shoe" />
                </div>
                <div class="product-info">
                  <div class="text-container">
                    <h4 class="product-title">{{entry.title}}</h4>
                    <p class="product-price">Pricing {{entry.price|money}}</p>
                  </div>
                  <img
                    src="{{ url('icons/Icon_AddCart.svg') }}"
                    alt="Add to cart"
                    class="add-to-cart-icon"
                  />
                </div>
              </a>
            {% endfor %}
        </div>
      </section>
    </div>

  <script>
    //===== Begin Filter Open =====//

    const filterContainer = document.querySelector(".filter-container");
    const overlayBG = document.querySelector(".overlay-background");
    const filterOpenBtn = document.querySelector(
    ".sort-container .title-container"
    );
    const filterCloseBtn = document.querySelector(
    ".filter-container .title-container"
    );

    filterOpenBtn.addEventListener("click", () => {
    const visibility = filterContainer.getAttribute("data-visible");

    if (visibility === "false") {
        filterContainer.setAttribute("data-visible", "true");
        overlayBG.setAttribute("data-visible", "true");
    } else if (visibility === "true") {
        filterContainer.setAttribute("data-visible", "false");
        overlayBG.setAttribute("data-visible", "false");
    }
    });

    filterCloseBtn.addEventListener("click", () => {
    const visibility = filterContainer.getAttribute("data-visible");

    if (visibility === "true") {
        filterContainer.setAttribute("data-visible", "false");
        overlayBG.setAttribute("data-visible", "false");
    }
    });

    overlayBG.addEventListener("click", () => {
    const visibility = filterContainer.getAttribute("data-visible");

    if (visibility === "true") {
        filterContainer.setAttribute("data-visible", "false");
        overlayBG.setAttribute("data-visible", "false");
    }
    });

    //===== End Filter Open =====//

    //===== Begin Color FilterLabel =====//

    document.addEventListener("DOMContentLoaded", function () {
    var checkboxes = document.querySelectorAll('input[type="checkbox"]');

    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener("change", function (e) {
        if (e.target.checked) {
            console.log(e.target.name + " checked");

            e.target.parentNode.classList.add("checked-label");
        } else {
            console.log(e.target.name + " not checked");

            e.target.parentNode.classList.remove("checked-label");
        }
        });
    });
    });

    //===== End Color FilterLabel =====//

    //===== Begin Filters =====//

    // Object to store selected filters for each category
    let selectedFilters = {
      demographics: [],
      types: [],
      colors: [],
      sizes: [],
    };

    // Event listener setup for filter checkboxes
    document.querySelectorAll(".filter-category-container input").forEach((element) => {
      element.addEventListener("change", onSelectFilter);
    });

    // Function to handle changes in filter selection
    function onSelectFilter(e) {
      // Identify the category of the selected filter
      const category = this.closest(".filter-category-container").getAttribute("data-category");
      // Get the value of the selected filter
      const value = this.name;

      // Toggle the selected state of the filter in the selectedFilters object
      if (selectedFilters[category].includes(value)) {
        selectedFilters[category] = selectedFilters[category].filter(
          (filter) => filter !== value
        );
      } else {
        selectedFilters[category].push(value);
      }

      // Update the product grid based on the selected filters
      updateGrid();
    }

    // Function to update the product grid based on selected filters
    function updateGrid() {
      // Iterate through each product in the grid
      document
        .querySelectorAll(".catalog-container .catalog-item")
        .forEach((el) => {
          // Check if the selected demographics filters match the product's attributes
          const demographicsMatch =
            selectedFilters.demographics.length === 0 ||
            selectedFilters.demographics.some((demographic) =>
              el.hasAttribute("data-" + demographic)
            );
          // Check if the selected types filters match the product's attributes
          const typesMatch =
            selectedFilters.types.length === 0 ||
            selectedFilters.types.some((type) => el.hasAttribute("data-" + type));
          // Check if the selected colors filters match the product's attributes
          const colorsMatch =
            selectedFilters.colors.length === 0 ||
            selectedFilters.colors.some((color) => el.hasAttribute("data-" + color));
          // Check if the selected sizes filters match the product's attributes
          const sizesMatch =
            selectedFilters.sizes.length === 0 ||
            selectedFilters.sizes.some((size) => el.hasAttribute("data-" + size));

          // Display or hide the product based on filter matches
          if (demographicsMatch && typesMatch && colorsMatch && sizesMatch) {
            el.style.display = "block";
          } else {
            el.style.display = "none";
          }
        });
    }

    //===== End Filters =====//
  </script>

{% endblock %}
